---

- name: Install nginx packages
  apt: pkg={{','.join(nginx_debian_pkgs)}} state=present
  notify: restart nginx

- name: Copying nginx configs for {{ nginx_sites }}
  template: >
    src={{ nginx_template_dir }}/{{ item }}.j2
    dest={{ nginx_sites_available_dir }}/{{ item }}
    owner=root group={{ common_web_user }} mode=0640
  notify: reload nginx
  with_items: nginx_sites

- name: Creating nginx config links for {{ nginx_sites }}
  file: >
    src={{ nginx_sites_available_dir }}/{{ item  }}
    dest={{ nginx_sites_enabled_dir }}/{{ item }}
    state=link owner=root group=root
  notify: reload nginx
  with_items: nginx_sites

- name: Write out htpasswd file
  htpasswd: >
    name={{ NGINX_HTPASSWD_USER }}
    password={{ NGINX_HTPASSWD_PASS }}
    path={{ nginx_htpasswd_file }}
  when: NGINX_ENABLE_BASIC_AUTH

# Check to see if the ssl cert/key exists before copying.
# This extra check is done to prevent failures when
# ansible-playbook is run locally
- local_action:
    module: stat
    path: "{{ NGINX_SSL_CERTIFICATE }}"
  sudo: False
  register: ssl_cert

- local_action:
    module: stat
    path: "{{ NGINX_SSL_KEY }}"
  sudo: False
  register: ssl_key

- name: copy ssl cert
  copy: >
    src={{ NGINX_SSL_CERTIFICATE }}
    dest=/etc/ssl/certs/
    owner=root group=root mode=0644
  when: ssl_cert.stat.exists and NGINX_ENABLE_SSL and NGINX_SSL_CERTIFICATE != 'ssl-cert-snakeoil.pem'

- name: copy ssl key
  copy: >
    src={{ NGINX_SSL_KEY }}
    dest=/etc/ssl/private/
    owner=root group=root mode=0640
  when: ssl_key.stat.exists and NGINX_ENABLE_SSL and NGINX_SSL_KEY != 'ssl-cert-snakeoil.key'

- name: make sure nginx has started
  service: name=nginx state=started
